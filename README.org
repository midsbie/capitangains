#+title: CapitaNGains - Capital Gains and Income Report (PT/EN)
#+author: 
#+options: toc:t num:nil

CapitaNGains is intended to produce capital gains reports from broker annual statements, and was primarily developed to aid tax reporting for residents in Portugal. At the moment it supports only Interactive Brokers (IBKR) Activity Statement exports in CSV format, from which it generates an XLSX workbook with realized trades (FIFO), per-symbol summaries, dividends, account interest, SYEP interest details, withholding tax, and an Annex-G helper sheet localized in Portuguese or English.

* Important Disclaimer
- This tool is experimental and may generate inconsistent or invalid reports.
- Always double-check all figures against your broker statements and the applicable tax rules/law.
- FX conversions rely on your input dataset and approximations (e.g., weekend/holiday fallback) and may differ from broker or tax authority calculations.
- No warranty and no tax advice is provided; use at your own risk.

* Highlights
- FIFO realized gains with buy-lot audit trail
- EUR conversion per date using an external FX table (optional)
- Clear sheets: Trading Totals, Realized Trades, Per Symbol Summary, Dividends, Account Interest, SYEP Interest, Withholding Tax, and =Operações por Lote (Anexo G)=

* Installation

Install from source:

1. Clone the repository
   #+begin_src sh
   git clone https://github.com/midsbie/capitangains.git
   cd capitangains
   #+end_src

2. (Recommended) Create a virtual environment
   #+begin_src sh
   python3 -m venv .venv
   source .venv/bin/activate
   #+end_src

3. Install dependencies
   #+begin_src sh
   make setup
   #+end_src

After installation, the CLI is available as:

#+begin_src sh
python -m capitangains.cmd --help
# or if entry points are configured in your environment
capitangains --help
#+end_src

* CLI Usage

You can pass one or more CSV files via =--input=. It is often necessary to include prior years so FIFO can match sales against earlier buys. Otherwise, sales in the report year that were opened in previous years may be treated as zero-cost (distorting proceeds, allocated cost, and realized P/L).

Examples:

- Single year (only if all buys and sells are within the same year):

  #+begin_src sh
  python -m capitangains.cmd.generate_ibkr_report \
    --year 2024 \
    --input ./U1234567_2024_2024.csv \
    --output ./report_2024.xlsx \
    --fx-table ./fx_rates.csv \
    --locale EN  # or PT; optional
  #+end_src

- Multi-year (recommended when sales match prior-year buys):

  #+begin_src sh
  python -m capitangains.cmd.generate_ibkr_report \
    --year 2024 \
    --input ./U1234567_2023_2023.csv ./U1234567_2024_2024.csv \
    --output ./report_2024.xlsx \
    --fx-table ./fx_rates.csv \
    --locale EN  # or PT; optional
  #+end_src

If you omit =--output=, the tool writes =report_<year>.xlsx= in the current folder.

* FX Data (EUR base)

EUR conversion is optional, but recommended so the workbook contains EUR amounts for non-EUR trades and income. The tool expects a CSV with the following schema:

#+begin_src csv
date,currency,rate
1999-01-04,USD,1.1789
1999-01-04,GBP,0.7111
#+end_src

- =rate= is "target currency units per EUR” (e.g., USD per EUR).
- The tool internally computes "EUR per 1 unit of currency” and does weekend/holiday fallback to the most recent prior date when an exact date isn’t available.

Tip: you can easily obtain a Forex dataset compatible with this tool from official /Banco de Portugal/ rates using the =bdpfxtract= utility:
- Project: https://github.com/midsbie/bdpfxtract/
- Example command (produces =date,currency,rate= with EUR base): see the project’s README for instructions and options.

* Development

- Python 3.9+
- Install with dev extras (optional):
  - =pip install -e .[dev]=
- Run tests (pytest):
  - =pytest -q=

* Notes

- The tool relies on the "Activity Statement” CSV exported from IBKR (not Flex queries). Keep the CSV structure intact.
- Some sanitized exports include elided values ("...”), and are treated as zeroes with warnings.
- SYEP totals rows in the CSV are ignored; the per-day interest details are listed in the "SYEP Interest” sheet.

* License
Released under the MIT license; refer to =LICENSE= for more details.
